# Robot Model, [model_type]: 
#       1. Unicycle Model with State Vector: [x, y, phi]
#       2. Unicycle Double Integration Model with State Vector: [x, y, phi, v, w]

# Pedestrian Model for the controller, [ped_predictor]: 
#       1. Constant Velocity Propagation with State Vector: [x, y, vx, vy]

init_state: [-4, -4, 0]                    # Initial robot state vector: [x_rob_init, y_rob_init, phi_rob_init], [m, m, rad, m/s, rad/s]
goal: [4, 4, 0]                            # Reference robot position: [x_rob_ref,  y_rob_ref,  phi_rob_ref], [m, m, rad]
dt: 0.1                                    # Time interval, [s]
horizon: 30                                # MPC planning horizon, [steps]
model_type: "unicycle"                     # Robot model, ["unicycle", "unicycle double integrator"]
ped_predictor: "constant velocity"         # Pedestrian predictor, ["constant velocity", "neural"]
Q: [[10000, 0, 0],   
    [0, 10000, 0],   
    [0,   0,   1]]                         # State weighted matrix: [dx, dy, dphi]
R: [[1, 0],   
    [0, 1]]                                # Control input weighted matrix: [u_a, u_alpha], [m/s^2, rad/s^2]
r_rob: 0.35                                # Robot radius, [m]
r_ped: 0.3                                 # Pedestrian radius, [m]
lb: [0, -2]                                # Lower bounds for NLP: [v, w, u_a, u_alpha], [m/s, rad/s]
ub: [2, 2]                                 # Upper bounds for NLP: [v, w, u_a, u_alpha], [m/s, rad/s]
min_safe_dist: 1                           # Minimum safe distance to pedestrians and other objects, [m]
total_peds: 5                              # Amount of pedestrians
ped_dect_range: 4                          # Pedestrian detector max range, [m]
ped_dect_fov: 120                          # Pedestrian detector max fov, [deg] 
misdetection_prob: 0.0                     # Probability of pedestrian misdetection
state_dummy_ped: [10000, 10000, 0, 0]      # Dummy pedestrian state vector: [x_ped,  y_ped, vx_ped, vy_ped], [m, m, m/s, m/s]
is_robot_visible: True                     # Boolean flag of robot visibility for pedestrians
tollerence_error: 0.1                      # Tollernce error for the Euclidean distance to the goal, [m]
is_store_robot_predicted_trajectory: True  # Flag to store robot predicted trajectory, [True, False]
max_ghost_tracking_time: 15                # Amount of steps to track ghost pedestrian, [step]